{
    "StartAt": "ProcessSQSEvent",
    "States": {
        "ProcessSQSEvent": {
            "Type": "Map",
            "ItemProcessor": {
                "ProcessorConfig": {
                    "Mode": "INLINE"
                },
                "StartAt": "ParseSQSEventBody",
                "States": {
                    "ParseSQSEventBody": {
                        "Type": "Pass",
                        "Parameters": {
                            "body.$": "States.StringToJson($.body)"
                        },
                        "Next": "CheckSQSBodyRecords"
                    },
                    "CheckSQSBodyRecords": {
                        "Type": "Choice",
                        "Choices": [
                            {
                                "Variable": "$.body.Records",
                                "IsPresent": true,
                                "Next": "ProcessSQSBodyRecordsAndPass"
                            }
                        ],
                        "Default": "InvalidSQSBody"
                    },
                    "InvalidSQSBody": {
                        "Type": "Pass",
                        "End": true
                    },
                    "ProcessSQSBodyRecordsAndPass": {
                        "Type": "Parallel",
                        "End": true,
                        "Branches": [
                            {
                                "StartAt": "ProcessSQSBodyRecords",
                                "States": {
                                    "ProcessSQSBodyRecords": {
                                        "Type": "Map",
                                        "ItemProcessor": {
                                            "ProcessorConfig": {
                                                "Mode": "INLINE"
                                            },
                                            "StartAt": "CheckSQSRecordEvent",
                                            "States": {
                                                "CheckSQSRecordEvent": {
                                                    "Type": "Choice",
                                                    "Choices": [
                                                        {
                                                            "Variable": "$.eventName",
                                                            "StringEquals": "ObjectCreated:Put",
                                                            "Next": "ParallelS3GetObjectAndPass"
                                                        }
                                                    ],
                                                    "Default": "InvalidSQSRecordEvent"
                                                },
                                                "InvalidSQSRecordEvent": {
                                                    "Type": "Pass",
                                                    "End": true
                                                },
                                                "ParallelS3GetObjectAndPass": {
                                                    "Type": "Parallel",
                                                    "Branches": [
                                                        {
                                                            "StartAt": "PassThroughInput",
                                                            "States": {
                                                                "PassThroughInput": {
                                                                    "Type": "Pass",
                                                                    "End": true
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "StartAt": "S3GetObject",
                                                            "States": {
                                                                "S3GetObject": {
                                                                    "Type": "Task",
                                                                    "End": true,
                                                                    "Parameters": {
                                                                        "Bucket.$": "$.s3.bucket.name",
                                                                        "Key.$": "$.s3.object.key"
                                                                    },
                                                                    "Resource": "arn:aws:states:::aws-sdk:s3:getObject"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "ResultSelector": {
                                                        "awsRegion.$": "$[0].awsRegion",
                                                        "eventName.$": "$[0].eventName",
                                                        "eventSource.$": "$[0].eventSource",
                                                        "eventTime.$": "$[0].eventTime",
                                                        "eventVersion.$": "$[0].eventVersion",
                                                        "requestParameters.$": "$[0].requestParameters",
                                                        "s3": {
                                                            "bucket.$": "$[0].s3.bucket",
                                                            "configurationId.$": "$[0].s3.configurationId",
                                                            "object": {
                                                                "body.$": "States.StringToJson($[1].Body)",
                                                                "acceptRanges.$": "$[1].AcceptRanges",
                                                                "contentLength.$": "$[1].ContentLength",
                                                                "contentType.$": "$[1].ContentType",
                                                                "eTag.$": "$[0].s3.object.eTag",
                                                                "key.$": "$[0].s3.object.key",
                                                                "lastModified.$": "$[1].LastModified",
                                                                "metadata.$": "$[1].Metadata",
                                                                "serverSideEncryption.$": "$[1].ServerSideEncryption"
                                                            },
                                                            "s3SchemaVersion.$": "$[0].s3.s3SchemaVersion"
                                                        },
                                                        "userIdentity.$": "$[0].userIdentity"
                                                    },
                                                    "Next": "ProcessComprehendRecords"
                                                },
                                                "ProcessComprehendRecords": {
                                                    "Type": "Map",
                                                    "ItemProcessor": {
                                                        "ProcessorConfig": {
                                                            "Mode": "INLINE"
                                                        },
                                                        "StartAt": "ParallelProcessComprehendRecord",
                                                        "States": {
                                                            "ParallelProcessComprehendRecord": {
                                                                "Type": "Parallel",
                                                                "End": true,
                                                                "Branches": [
                                                                    {
                                                                        "StartAt": "ProcessComprehendEntities",
                                                                        "States": {
                                                                            "ProcessComprehendEntities": {
                                                                                "Type": "Map",
                                                                                "ItemProcessor": {
                                                                                    "ProcessorConfig": {
                                                                                        "Mode": "INLINE"
                                                                                    },
                                                                                    "StartAt": "PutObjectComprehendEntity",
                                                                                    "States": {
                                                                                        "PutObjectComprehendEntity": {
                                                                                            "Type": "Task",
                                                                                            "Parameters": {
                                                                                                "Body": {
                                                                                                    "begin_offset.$": "$.entity.beginOffset",
                                                                                                    "comprehend_id.$": "$.entity.comprehendId",
                                                                                                    "created_at.$": "$.entity.createdAt",
                                                                                                    "end_offset.$": "$.entity.endOffset",
                                                                                                    "id.$": "$.entity.id",
                                                                                                    "index.$": "$.entity.index",
                                                                                                    "language_code.$": "$.entity.languageCode",
                                                                                                    "language_code_score.$": "$.entity.languageCodeScore",
                                                                                                    "score.$": "$.entity.score",
                                                                                                    "text.$": "$.entity.text",
                                                                                                    "type.$": "$.entity.type"
                                                                                                },
                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                "Key.$": "States.Format('${aws_s3_object_key_entity}language={}/category={}/comprehend={}/{}.json', $.entity.languageCode, $.entity.type, $.entity.comprehendId, $.entity.id)"
                                                                                            },
                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject",
                                                                                            "End": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "End": true,
                                                                                "ItemSelector": {
                                                                                    "entity": {
                                                                                        "beginOffset.$": "$$.Map.Item.Value.beginOffset",
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "createdAt.$": "$.createdAt",
                                                                                        "endOffset.$": "$$.Map.Item.Value.endOffset",
                                                                                        "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                        "index.$": "$$.Map.Item.Value.index",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "score.$": "$$.Map.Item.Value.score",
                                                                                        "text.$": "$$.Map.Item.Value.text",
                                                                                        "type.$": "$$.Map.Item.Value.type"
                                                                                    },
                                                                                    "s3.$": "$.s3"
                                                                                },
                                                                                "ItemsPath": "$.comprehend.entities"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "StartAt": "ProcessComprehendKeyPhrases",
                                                                        "States": {
                                                                            "ProcessComprehendKeyPhrases": {
                                                                                "Type": "Map",
                                                                                "ItemProcessor": {
                                                                                    "ProcessorConfig": {
                                                                                        "Mode": "INLINE"
                                                                                    },
                                                                                    "StartAt": "PutObjectComprehendKeyPhrase",
                                                                                    "States": {
                                                                                        "PutObjectComprehendKeyPhrase": {
                                                                                            "Type": "Task",
                                                                                            "End": true,
                                                                                            "Parameters": {
                                                                                                "Body": {
                                                                                                    "begin_offset.$": "$.keyPhrase.beginOffset",
                                                                                                    "comprehend_id.$": "$.keyPhrase.comprehendId",
                                                                                                    "created_at.$": "$.keyPhrase.createdAt",
                                                                                                    "end_offset.$": "$.keyPhrase.endOffset",
                                                                                                    "id.$": "$.keyPhrase.id",
                                                                                                    "index.$": "$.keyPhrase.index",
                                                                                                    "language_code.$": "$.keyPhrase.languageCode",
                                                                                                    "language_code_score.$": "$.keyPhrase.languageCodeScore",
                                                                                                    "score.$": "$.keyPhrase.score",
                                                                                                    "text.$": "$.keyPhrase.text"
                                                                                                },
                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                "Key.$": "States.Format('${aws_s3_object_key_key_phrase}language={}/comprehend={}/{}.json', $.keyPhrase.languageCode, $.keyPhrase.comprehendId, $.keyPhrase.id)"
                                                                                            },
                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "End": true,
                                                                                "ItemsPath": "$.comprehend.keyPhrases",
                                                                                "ItemSelector": {
                                                                                    "keyPhrase": {
                                                                                        "beginOffset.$": "$$.Map.Item.Value.beginOffset",
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "createdAt.$": "$.createdAt",
                                                                                        "endOffset.$": "$$.Map.Item.Value.endOffset",
                                                                                        "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                        "index.$": "$$.Map.Item.Value.index",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "score.$": "$$.Map.Item.Value.score",
                                                                                        "text.$": "$$.Map.Item.Value.text"
                                                                                    },
                                                                                    "s3.$": "$.s3"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "StartAt": "ProcessComprehendPiiEntities",
                                                                        "States": {
                                                                            "ProcessComprehendPiiEntities": {
                                                                                "Type": "Map",
                                                                                "ItemProcessor": {
                                                                                    "ProcessorConfig": {
                                                                                        "Mode": "INLINE"
                                                                                    },
                                                                                    "StartAt": "PutObjectComprehendPiiEntity",
                                                                                    "States": {
                                                                                        "PutObjectComprehendPiiEntity": {
                                                                                            "Type": "Task",
                                                                                            "Parameters": {
                                                                                                "Body": {
                                                                                                    "begin_offset.$": "$.piiEntity.beginOffset",
                                                                                                    "comprehend_id.$": "$.piiEntity.comprehendId",
                                                                                                    "created_at.$": "$.piiEntity.createdAt",
                                                                                                    "end_offset.$": "$.piiEntity.endOffset",
                                                                                                    "id.$": "$.piiEntity.id",
                                                                                                    "index.$": "$.piiEntity.index",
                                                                                                    "language_code.$": "$.piiEntity.languageCode",
                                                                                                    "language_code_score.$": "$.piiEntity.languageCodeScore",
                                                                                                    "score.$": "$.piiEntity.score",
                                                                                                    "type.$": "$.piiEntity.type"
                                                                                                },
                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                "Key.$": "States.Format('${aws_s3_object_key_pii_entity}language={}/category={}/comprehend={}/{}.json', $.piiEntity.languageCode, $.piiEntity.type, $.piiEntity.comprehendId, $.piiEntity.id)"
                                                                                            },
                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject",
                                                                                            "End": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "End": true,
                                                                                "ItemSelector": {
                                                                                    "piiEntity": {
                                                                                        "beginOffset.$": "$$.Map.Item.Value.beginOffset",
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "createdAt.$": "$.createdAt",
                                                                                        "endOffset.$": "$$.Map.Item.Value.endOffset",
                                                                                        "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                        "index.$": "$$.Map.Item.Value.index",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "score.$": "$$.Map.Item.Value.score",
                                                                                        "type.$": "$$.Map.Item.Value.type"
                                                                                    },
                                                                                    "s3.$": "$.s3"
                                                                                },
                                                                                "ItemsPath": "$.comprehend.piiEntities"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "StartAt": "ParallelProcessComprehendSentiment",
                                                                        "States": {
                                                                            "ParallelProcessComprehendSentiment": {
                                                                                "Type": "Parallel",
                                                                                "End": true,
                                                                                "Branches": [
                                                                                    {
                                                                                        "StartAt": "PutObjectComprehendSentiment",
                                                                                        "States": {
                                                                                            "PutObjectComprehendSentiment": {
                                                                                                "Type": "Task",
                                                                                                "End": true,
                                                                                                "Parameters": {
                                                                                                    "Body": {
                                                                                                        "comprehend_id.$": "$.sentiment.comprehendId",
                                                                                                        "createdAt.$": "$.sentiment.createdAt",
                                                                                                        "id.$": "$.sentiment.id",
                                                                                                        "language_code.$": "$.sentiment.languageCode",
                                                                                                        "language_code_score.$": "$.sentiment.languageCodeScore",
                                                                                                        "sentiment.$": "$.sentiment.sentiment"
                                                                                                    },
                                                                                                    "Bucket.$": "$.s3.bucket.name",
                                                                                                    "Key.$": "States.Format('${aws_s3_object_key_sentiment}language={}/category={}/comprehend={}/{}.json', $.sentiment.languageCode, $.sentiment.sentiment, $.sentiment.comprehendId, $.sentiment.id)"
                                                                                                },
                                                                                                "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "StartAt": "PutObjectComprehendSentimentScore",
                                                                                        "States": {
                                                                                            "PutObjectComprehendSentimentScore": {
                                                                                                "Type": "Task",
                                                                                                "End": true,
                                                                                                "Parameters": {
                                                                                                    "Body": {
                                                                                                        "comprehend_id.$": "$.sentiment.comprehendId",
                                                                                                        "createdAt.$": "$.sentiment.createdAt",
                                                                                                        "id.$": "$.sentiment.sentimentScore.id",
                                                                                                        "language_code.$": "$.sentiment.languageCode",
                                                                                                        "language_code_score.$": "$.sentiment.languageCodeScore",
                                                                                                        "mixed.$": "$.sentiment.sentimentScore.mixed",
                                                                                                        "negative.$": "$.sentiment.sentimentScore.negative",
                                                                                                        "neutral.$": "$.sentiment.sentimentScore.neutral",
                                                                                                        "positive.$": "$.sentiment.sentimentScore.positive",
                                                                                                        "sentiment_id.$": "$.sentiment.id"
                                                                                                    },
                                                                                                    "Bucket.$": "$.s3.bucket.name",
                                                                                                    "Key.$": "States.Format('${aws_s3_object_key_sentiment_score}language={}/sentiment={}/comprehend={}/{}.json', $.sentiment.languageCode, $.sentiment.id, $.sentiment.comprehendId, $.sentiment.sentimentScore.id)"
                                                                                                },
                                                                                                "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "Parameters": {
                                                                                    "s3.$": "$.s3",
                                                                                    "sentiment": {
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "createdAt.$": "$.createdAt",
                                                                                        "id.$": "States.Hash($.comprehend.sentiment, 'MD5')",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "sentiment.$": "$.comprehend.sentiment.sentiment",
                                                                                        "sentimentScore": {
                                                                                            "id.$": "States.Hash($.comprehend.sentiment.sentimentScore, 'MD5')",
                                                                                            "mixed.$": "$.comprehend.sentiment.sentimentScore.mixed",
                                                                                            "negative.$": "$.comprehend.sentiment.sentimentScore.negative",
                                                                                            "neutral.$": "$.comprehend.sentiment.sentimentScore.neutral",
                                                                                            "positive.$": "$.comprehend.sentiment.sentimentScore.positive"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "StartAt": "ProcessComprehendSyntaxTokens",
                                                                        "States": {
                                                                            "ProcessComprehendSyntaxTokens": {
                                                                                "Type": "Map",
                                                                                "ItemProcessor": {
                                                                                    "ProcessorConfig": {
                                                                                        "Mode": "INLINE"
                                                                                    },
                                                                                    "StartAt": "ParallelProcessComprehendSyntaxToken",
                                                                                    "States": {
                                                                                        "ParallelProcessComprehendSyntaxToken": {
                                                                                            "Type": "Parallel",
                                                                                            "End": true,
                                                                                            "Branches": [
                                                                                                {
                                                                                                    "StartAt": "PutObjectComprehendSyntaxToken",
                                                                                                    "States": {
                                                                                                        "PutObjectComprehendSyntaxToken": {
                                                                                                            "Type": "Task",
                                                                                                            "End": true,
                                                                                                            "Parameters": {
                                                                                                                "Body": {
                                                                                                                    "begin_offset.$": "$.syntaxToken.beginOffset",
                                                                                                                    "comprehend_id.$": "$.syntaxToken.comprehendId",
                                                                                                                    "createdAt.$": "$.syntaxToken.createdAt",
                                                                                                                    "end_offset.$": "$.syntaxToken.endOffset",
                                                                                                                    "index.$": "$.syntaxToken.index",
                                                                                                                    "id.$": "$.syntaxToken.id",
                                                                                                                    "language_code.$": "$.syntaxToken.languageCode",
                                                                                                                    "language_code_score.$": "$.syntaxToken.languageCodeScore",
                                                                                                                    "text.$": "$.syntaxToken.text",
                                                                                                                    "token_id.$": "$.syntaxToken.tokenId"
                                                                                                                },
                                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                                "Key.$": "States.Format('${aws_s3_object_key_syntax_token}language={}/token={}/comprehend={}/{}.json', $.syntaxToken.languageCode, $.syntaxToken.tokenId, $.syntaxToken.comprehendId, $.syntaxToken.id)"
                                                                                                            },
                                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "StartAt": "PutObjectComprehendSyntaxTokenPartOfSpeech",
                                                                                                    "States": {
                                                                                                        "PutObjectComprehendSyntaxTokenPartOfSpeech": {
                                                                                                            "Type": "Task",
                                                                                                            "End": true,
                                                                                                            "Parameters": {
                                                                                                                "Body": {
                                                                                                                    "comprehend_id.$": "$.syntaxToken.comprehendId",
                                                                                                                    "created_at.$": "$.syntaxToken.createdAt",
                                                                                                                    "id.$": "$.syntaxToken.partOfSpeech.id",
                                                                                                                    "language_code.$": "$.syntaxToken.languageCode",
                                                                                                                    "language_code_score.$": "$.syntaxToken.languageCodeScore",
                                                                                                                    "score.$": "$.syntaxToken.partOfSpeech.score",
                                                                                                                    "syntax_token_id.$": "$.syntaxToken.id",
                                                                                                                    "tag.$": "$.syntaxToken.partOfSpeech.tag"
                                                                                                                },
                                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                                "Key.$": "States.Format('${aws_s3_object_key_syntax_token_part_of_speech}language={}/category={}/syntax_token={}/comprehend={}/{}.json', $.syntaxToken.languageCode, $.syntaxToken.partOfSpeech.tag, $.syntaxToken.id, $.syntaxToken.comprehendId, $.syntaxToken.partOfSpeech.id)"
                                                                                                            },
                                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "End": true,
                                                                                "ItemsPath": "$.comprehend.syntaxTokens",
                                                                                "ItemSelector": {
                                                                                    "syntaxToken": {
                                                                                        "beginOffset.$": "$$.Map.Item.Value.beginOffset",
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "createdAt.$": "$.createdAt",
                                                                                        "endOffset.$": "$$.Map.Item.Value.endOffset",
                                                                                        "index.$": "$$.Map.Item.Value.index",
                                                                                        "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "partOfSpeech": {
                                                                                            "id.$": "States.Hash($$.Map.Item.Value.partOfSpeech, 'MD5')",
                                                                                            "score.$": "$$.Map.Item.Value.partOfSpeech.score",
                                                                                            "tag.$": "$$.Map.Item.Value.partOfSpeech.tag"
                                                                                        },
                                                                                        "text.$": "$$.Map.Item.Value.text",
                                                                                        "tokenId.$": "$$.Map.Item.Value.tokenId"
                                                                                    },
                                                                                    "s3.$": "$.s3"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "StartAt": "ProcessComprehendTargetedSentiment",
                                                                        "States": {
                                                                            "ProcessComprehendTargetedSentiment": {
                                                                                "Type": "Map",
                                                                                "ItemProcessor": {
                                                                                    "ProcessorConfig": {
                                                                                        "Mode": "INLINE"
                                                                                    },
                                                                                    "StartAt": "ParallelProcessComprehendTargetedSentiment",
                                                                                    "States": {
                                                                                        "ParallelProcessComprehendTargetedSentiment": {
                                                                                            "Type": "Parallel",
                                                                                            "End": true,
                                                                                            "Branches": [
                                                                                                {
                                                                                                    "StartAt": "PutObjectComprehendTargetedSentiment",
                                                                                                    "States": {
                                                                                                        "PutObjectComprehendTargetedSentiment": {
                                                                                                            "Type": "Task",
                                                                                                            "End": true,
                                                                                                            "Parameters": {
                                                                                                                "Body": {
                                                                                                                    "comprehend_id.$": "$.targetedSentiment.comprehendId",
                                                                                                                    "created_at.$": "$.targetedSentiment.createdAt",
                                                                                                                    "id.$": "$.targetedSentiment.id",
                                                                                                                    "index.$": "$.targetedSentiment.index",
                                                                                                                    "language_code.$": "$.targetedSentiment.languageCode",
                                                                                                                    "language_code_score.$": "$.targetedSentiment.languageCodeScore"
                                                                                                                },
                                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                                "Key.$": "States.Format('${aws_s3_object_key_targeted_sentiment}language={}/comprehend={}/{}.json', $.targetedSentiment.languageCode, $.targetedSentiment.comprehendId, $.targetedSentiment.id)"
                                                                                                            },
                                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "StartAt": "ProcessComprehendTargetedSentimentDescriptiveIndex",
                                                                                                    "States": {
                                                                                                        "ProcessComprehendTargetedSentimentDescriptiveIndex": {
                                                                                                            "Type": "Map",
                                                                                                            "ItemProcessor": {
                                                                                                                "ProcessorConfig": {
                                                                                                                    "Mode": "INLINE"
                                                                                                                },
                                                                                                                "StartAt": "PutObjectComprehendTargetedSentimentDescriptiveIndex",
                                                                                                                "States": {
                                                                                                                    "PutObjectComprehendTargetedSentimentDescriptiveIndex": {
                                                                                                                        "Type": "Task",
                                                                                                                        "End": true,
                                                                                                                        "Parameters": {
                                                                                                                            "Body": {
                                                                                                                                "comprehend_id.$": "$.descriptiveMentionIndex.comprehendId",
                                                                                                                                "created_at.$": "$.descriptiveMentionIndex.createdAt",
                                                                                                                                "id.$": "$.descriptiveMentionIndex.id",
                                                                                                                                "index.$": "$.descriptiveMentionIndex.index",
                                                                                                                                "language_code.$": "$.descriptiveMentionIndex.languageCode",
                                                                                                                                "language_code_score.$": "$.descriptiveMentionIndex.languageCodeScore",
                                                                                                                                "targeted_sentiment_id.$": "$.descriptiveMentionIndex.targetedSentimentId",
                                                                                                                                "value.$": "$.descriptiveMentionIndex.value"
                                                                                                                            },
                                                                                                                            "Bucket.$": "$.s3.bucket.name",
                                                                                                                            "Key.$": "States.Format('${aws_s3_object_key_targeted_sentiment_descriptive_mention}language={}/targeted_sentiment={}/comprehend={}/{}.json', $.descriptiveMentionIndex.languageCode, $.descriptiveMentionIndex.targetedSentimentId, $.descriptiveMentionIndex.comprehendId, $.descriptiveMentionIndex.id)"
                                                                                                                        },
                                                                                                                        "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "End": true,
                                                                                                            "ItemsPath": "$.targetedSentiment.descriptiveMentionIndex",
                                                                                                            "ItemSelector": {
                                                                                                                "descriptiveMentionIndex": {
                                                                                                                    "comprehendId.$": "$.targetedSentiment.id",
                                                                                                                    "createdAt.$": "$.targetedSentiment.createdAt",
                                                                                                                    "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                                                    "index.$": "$$.Map.Item.Value.index",
                                                                                                                    "languageCode.$": "$.targetedSentiment.languageCode",
                                                                                                                    "languageCodeScore.$": "$.targetedSentiment.languageCodeScore",
                                                                                                                    "targetedSentimentId.$": "$.targetedSentiment.id",
                                                                                                                    "value.$": "$$.Map.Item.Value.value"
                                                                                                                },
                                                                                                                "s3.$": "$.s3"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "StartAt": "ProcessComprehendTargetedSentimentMention",
                                                                                                    "States": {
                                                                                                        "ProcessComprehendTargetedSentimentMention": {
                                                                                                            "Type": "Map",
                                                                                                            "ItemProcessor": {
                                                                                                                "ProcessorConfig": {
                                                                                                                    "Mode": "INLINE"
                                                                                                                },
                                                                                                                "StartAt": "ParallelProcessComprehendTargetedSentimentMention",
                                                                                                                "States": {
                                                                                                                    "ParallelProcessComprehendTargetedSentimentMention": {
                                                                                                                        "Type": "Parallel",
                                                                                                                        "End": true,
                                                                                                                        "Branches": [
                                                                                                                            {
                                                                                                                                "StartAt": "PutObjectComprehendTargetedSentimentMention",
                                                                                                                                "States": {
                                                                                                                                    "PutObjectComprehendTargetedSentimentMention": {
                                                                                                                                        "Type": "Task",
                                                                                                                                        "End": true,
                                                                                                                                        "Parameters": {
                                                                                                                                            "Body": {
                                                                                                                                                "begin_offset.$": "$.mention.beginOffset",
                                                                                                                                                "comprehend_id.$": "$.mention.comprehendId",
                                                                                                                                                "created_at.$": "$.mention.createdAt",
                                                                                                                                                "end_offset.$": "$.mention.endOffset",
                                                                                                                                                "group_score.$": "$.mention.groupScore",
                                                                                                                                                "id.$": "$.mention.id",
                                                                                                                                                "index.$": "$.mention.index",
                                                                                                                                                "language_code.$": "$.mention.languageCode",
                                                                                                                                                "language_code_score.$": "$.mention.languageCodeScore",
                                                                                                                                                "score.$": "$.mention.score",
                                                                                                                                                "targeted_sentiment_id.$": "$.mention.targetedSentimentId",
                                                                                                                                                "text.$": "$.mention.text",
                                                                                                                                                "type.$": "$.mention.type"
                                                                                                                                            },
                                                                                                                                            "Bucket.$": "$.s3.bucket.name",
                                                                                                                                            "Key.$": "States.Format('${aws_s3_object_key_targeted_sentiment_mention}language={}/category={}/targeted_sentiment={}/comprehend={}/{}.json', $.mention.languageCode, $.mention.type, $.mention.targetedSentimentId, $.mention.comprehendId, $.mention.id)"
                                                                                                                                        },
                                                                                                                                        "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "StartAt": "PutObjectComprehendTargetedSentimentMentionSentiment",
                                                                                                                                "States": {
                                                                                                                                    "PutObjectComprehendTargetedSentimentMentionSentiment": {
                                                                                                                                        "Type": "Task",
                                                                                                                                        "End": true,
                                                                                                                                        "Parameters": {
                                                                                                                                            "Body": {
                                                                                                                                                "comprehend_id.$": "$.mention.comprehendId",
                                                                                                                                                "created_at.$": "$.mention.createdAt",
                                                                                                                                                "id.$": "$.mention.mentionSentiment.id",
                                                                                                                                                "language_code.$": "$.mention.languageCode",
                                                                                                                                                "language_code_score.$": "$.mention.languageCodeScore",
                                                                                                                                                "targeted_sentiment_mention_id.$": "$.mention.id",
                                                                                                                                                "sentiment.$": "$.mention.mentionSentiment.sentiment"
                                                                                                                                            },
                                                                                                                                            "Bucket.$": "$.s3.bucket.name",
                                                                                                                                            "Key.$": "States.Format('${aws_s3_object_key_targeted_sentiment_mention_sentiment}language={}/category={}/targeted_sentiment_mention={}/targeted_sentiment={}/comprehend={}/{}.json', $.mention.languageCode, $.mention.mentionSentiment.sentiment, $.mention.id, $.mention.targetedSentimentId, $.mention.comprehendId, $.mention.mentionSentiment.id)"
                                                                                                                                        },
                                                                                                                                        "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "StartAt": "PutObjectComprehendTargetedSentimentMentionMentionSentimentSentimentScore",
                                                                                                                                "States": {
                                                                                                                                    "PutObjectComprehendTargetedSentimentMentionMentionSentimentSentimentScore": {
                                                                                                                                        "Type": "Task",
                                                                                                                                        "End": true,
                                                                                                                                        "Parameters": {
                                                                                                                                            "Body": {
                                                                                                                                                "comprehend_id.$": "$.mention.comprehendId",
                                                                                                                                                "created_at.$": "$.mention.createdAt",
                                                                                                                                                "id.$": "$.mention.mentionSentiment.sentimentScore.id",
                                                                                                                                                "language_code.$": "$.mention.languageCode",
                                                                                                                                                "language_code_score.$": "$.mention.languageCodeScore",
                                                                                                                                                "negative.$": "$.mention.mentionSentiment.sentimentScore.negative",
                                                                                                                                                "neutral.$": "$.mention.mentionSentiment.sentimentScore.neutral",
                                                                                                                                                "mixed.$": "$.mention.mentionSentiment.sentimentScore.mixed",
                                                                                                                                                "positive.$": "$.mention.mentionSentiment.sentimentScore.positive",
                                                                                                                                                "targeted_sentiment_id.$": "$.mention.targetedSentimentId",
                                                                                                                                                "targeted_sentiment_mention_sentiment_id.$": "$.mention.mentionSentiment.id"
                                                                                                                                            },
                                                                                                                                            "Bucket.$": "$.s3.bucket.name",
                                                                                                                                            "Key.$": "States.Format('${aws_s3_object_key_targeted_sentiment_mention_sentiment_score}language={}/targeted_sentiment_mention_sentiment={}/targeted_sentiment_mention={}/targeted_sentiment={}/comprehend={}/{}.json', $.mention.languageCode, $.mention.mentionSentiment.id, $.mention.id, $.mention.targetedSentimentId, $.mention.comprehendId, $.mention.mentionSentiment.sentimentScore.id)"
                                                                                                                                        },
                                                                                                                                        "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "End": true,
                                                                                                            "ItemsPath": "$.targetedSentiment.mentions",
                                                                                                            "ItemSelector": {
                                                                                                                "mention": {
                                                                                                                    "beginOffset.$": "$$.Map.Item.Value.beginOffset",
                                                                                                                    "comprehendId.$": "$.targetedSentiment.id",
                                                                                                                    "createdAt.$": "$.targetedSentiment.createdAt",
                                                                                                                    "endOffset.$": "$$.Map.Item.Value.endOffset",
                                                                                                                    "groupScore.$": "$$.Map.Item.Value.groupScore",
                                                                                                                    "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                                                    "index.$": "$$.Map.Item.Value.index",
                                                                                                                    "languageCode.$": "$.targetedSentiment.languageCode",
                                                                                                                    "languageCodeScore.$": "$.targetedSentiment.languageCodeScore",
                                                                                                                    "mentionSentiment": {
                                                                                                                        "id.$": "States.Hash($$.Map.Item.Value.mentionSentiment, 'MD5')",
                                                                                                                        "sentimentScore": {
                                                                                                                            "id.$": "States.Hash($$.Map.Item.Value.mentionSentiment.sentimentScore, 'MD5')",
                                                                                                                            "negative.$": "$$.Map.Item.Value.mentionSentiment.sentimentScore.negative",
                                                                                                                            "neutral.$": "$$.Map.Item.Value.mentionSentiment.sentimentScore.neutral",
                                                                                                                            "mixed.$": "$$.Map.Item.Value.mentionSentiment.sentimentScore.mixed",
                                                                                                                            "positive.$": "$$.Map.Item.Value.mentionSentiment.sentimentScore.positive"
                                                                                                                        },
                                                                                                                        "sentiment.$": "$$.Map.Item.Value.mentionSentiment.sentiment"
                                                                                                                    },
                                                                                                                    "score.$": "$$.Map.Item.Value.score",
                                                                                                                    "targetedSentimentId.$": "$.targetedSentiment.id",
                                                                                                                    "text.$": "$$.Map.Item.Value.text",
                                                                                                                    "type.$": "$$.Map.Item.Value.type"
                                                                                                                },
                                                                                                                "s3.$": "$.s3"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "End": true,
                                                                                "ItemsPath": "$.comprehend.targetedSentiment",
                                                                                "ItemSelector": {
                                                                                    "s3.$": "$.s3",
                                                                                    "targetedSentiment": {
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "createdAt.$": "$.createdAt",
                                                                                        "descriptiveMentionIndex.$": "$$.Map.Item.Value.descriptiveMentionIndex",
                                                                                        "index.$": "$$.Map.Item.Value.index",
                                                                                        "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "mentions.$": "$$.Map.Item.Value.mentions"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "StartAt": "ProcessComprehendToxicContent",
                                                                        "States": {
                                                                            "ProcessComprehendToxicContent": {
                                                                                "Type": "Map",
                                                                                "ItemProcessor": {
                                                                                    "ProcessorConfig": {
                                                                                        "Mode": "INLINE"
                                                                                    },
                                                                                    "StartAt": "ParallelProcessComprehendToxicContent",
                                                                                    "States": {
                                                                                        "ParallelProcessComprehendToxicContent": {
                                                                                            "Type": "Parallel",
                                                                                            "End": true,
                                                                                            "Branches": [
                                                                                                {
                                                                                                    "StartAt": "PutObjectComprehendToxicContent",
                                                                                                    "States": {
                                                                                                        "PutObjectComprehendToxicContent": {
                                                                                                            "Type": "Task",
                                                                                                            "End": true,
                                                                                                            "Parameters": {
                                                                                                                "Body": {
                                                                                                                    "comprehend_id.$": "$.toxicContent.comprehendId",
                                                                                                                    "created_at.$": "$.toxicContent.createdAt",
                                                                                                                    "id.$": "$.toxicContent.id",
                                                                                                                    "index.$": "$.toxicContent.index",
                                                                                                                    "language_code.$": "$.toxicContent.languageCode",
                                                                                                                    "language_code_score.$": "$.toxicContent.languageCodeScore",
                                                                                                                    "toxicity.$": "$.toxicContent.toxicity"
                                                                                                                },
                                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                                "Key.$": "States.Format('${aws_s3_object_key_toxic_content}language={}/comprehend={}/{}.json', $.toxicContent.languageCode, $.toxicContent.comprehendId, $.toxicContent.id)"
                                                                                                            },
                                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "StartAt": "ProcessComprehendToxicContentLabel",
                                                                                                    "States": {
                                                                                                        "ProcessComprehendToxicContentLabel": {
                                                                                                            "Type": "Map",
                                                                                                            "ItemProcessor": {
                                                                                                                "ProcessorConfig": {
                                                                                                                    "Mode": "INLINE"
                                                                                                                },
                                                                                                                "StartAt": "PutObjectComprehendToxicContentLabel",
                                                                                                                "States": {
                                                                                                                    "PutObjectComprehendToxicContentLabel": {
                                                                                                                        "Type": "Task",
                                                                                                                        "End": true,
                                                                                                                        "Parameters": {
                                                                                                                            "Body": {
                                                                                                                                "comprehend_id.$": "$.label.comprehendId",
                                                                                                                                "created_at.$": "$.label.createdAt",
                                                                                                                                "id.$": "$.label.id",
                                                                                                                                "index.$": "$.label.index",
                                                                                                                                "language_code.$": "$.label.languageCode",
                                                                                                                                "language_code_score.$": "$.label.languageCodeScore",
                                                                                                                                "name.$": "$.label.name",
                                                                                                                                "score.$": "$.label.score",
                                                                                                                                "toxic_content_id.$": "$.label.toxicContentId"
                                                                                                                            },
                                                                                                                            "Bucket.$": "$.s3.bucket.name",
                                                                                                                            "Key.$": "States.Format('${aws_s3_object_key_toxic_content_label}language={}/category={}/toxic_content={}/comprehend={}/{}.json', $.label.languageCode, $.label.name, $.label.toxicContentId, $.label.comprehendId, $.label.id)"
                                                                                                                        },
                                                                                                                        "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "End": true,
                                                                                                            "ItemsPath": "$.toxicContent.labels",
                                                                                                            "ItemSelector": {
                                                                                                                "label": {
                                                                                                                    "comprehendId.$": "$.toxicContent.comprehendId",
                                                                                                                    "createdAt.$": "$.toxicContent.createdAt",
                                                                                                                    "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                                                    "index.$": "$$.Map.Item.Value.index",
                                                                                                                    "languageCode.$": "$.toxicContent.languageCode",
                                                                                                                    "languageCodeScore.$": "$.toxicContent.languageCodeScore",
                                                                                                                    "name.$": "$$.Map.Item.Value.name",
                                                                                                                    "score.$": "$$.Map.Item.Value.score",
                                                                                                                    "toxicContentId.$": "$.toxicContent.id"
                                                                                                                },
                                                                                                                "s3.$": "$.s3"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "End": true,
                                                                                "ItemsPath": "$.comprehend.toxicContent",
                                                                                "ItemSelector": {
                                                                                    "s3.$": "$.s3",
                                                                                    "toxicContent": {
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "createdAt.$": "$.createdAt",
                                                                                        "index.$": "$$.Map.Item.Value.index",
                                                                                        "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "labels.$": "$$.Map.Item.Value.labels",
                                                                                        "toxicity.$": "$$.Map.Item.Value.toxicity"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "End": true,
                                                    "ItemsPath": "$.s3.object.body.comprehend",
                                                    "ItemSelector": {
                                                        "createdAt.$": "$.s3.object.body.createdAt",
                                                        "comprehend": {
                                                            "entities.$": "$$.Map.Item.Value.entities",
                                                            "id.$": "$.s3.object.body.s3.object.eTag",
                                                            "keyPhrases.$": "$$.Map.Item.Value.keyPhrases",
                                                            "languageCode.$": "$$.Map.Item.Value.languageCode",
                                                            "languageCodeScore.$": "$$.Map.Item.Value.languageCodeScore",
                                                            "piiEntities.$": "$$.Map.Item.Value.piiEntities",
                                                            "sentiment.$": "$$.Map.Item.Value.sentiment",
                                                            "syntaxTokens.$": "$$.Map.Item.Value.syntaxTokens",
                                                            "targetedSentiment.$": "$$.Map.Item.Value.targetedSentiment",
                                                            "toxicContent.$": "$$.Map.Item.Value.toxicContent"
                                                        },
                                                        "s3": {
                                                            "bucket.$": "$.s3.bucket"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "End": true,
                                        "ItemsPath": "$.body.Records"
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "End": true
        }
    }
}
