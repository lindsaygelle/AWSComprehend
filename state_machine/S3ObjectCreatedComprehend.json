{
    "StartAt": "ProcessSQSEvent",
    "States": {
        "ProcessSQSEvent": {
            "Type": "Map",
            "ItemProcessor": {
                "ProcessorConfig": {
                    "Mode": "INLINE"
                },
                "StartAt": "ParseSQSEventBody",
                "States": {
                    "ParseSQSEventBody": {
                        "Type": "Pass",
                        "Parameters": {
                            "body.$": "States.StringToJson($.body)"
                        },
                        "Next": "CheckSQSBodyRecords"
                    },
                    "CheckSQSBodyRecords": {
                        "Type": "Choice",
                        "Choices": [
                            {
                                "Variable": "$.body.Records",
                                "IsPresent": true,
                                "Next": "ProcessSQSBodyRecordsAndPass"
                            }
                        ],
                        "Default": "InvalidSQSBody"
                    },
                    "InvalidSQSBody": {
                        "Type": "Pass",
                        "End": true
                    },
                    "ProcessSQSBodyRecordsAndPass": {
                        "Type": "Parallel",
                        "End": true,
                        "Branches": [
                            {
                                "StartAt": "ProcessSQSBodyRecords",
                                "States": {
                                    "ProcessSQSBodyRecords": {
                                        "Type": "Map",
                                        "ItemProcessor": {
                                            "ProcessorConfig": {
                                                "Mode": "INLINE"
                                            },
                                            "StartAt": "CheckSQSRecordEvent",
                                            "States": {
                                                "CheckSQSRecordEvent": {
                                                    "Type": "Choice",
                                                    "Choices": [
                                                        {
                                                            "Variable": "$.eventName",
                                                            "StringEquals": "ObjectCreated:Put",
                                                            "Next": "ParallelS3GetObjectAndPass"
                                                        }
                                                    ],
                                                    "Default": "InvalidSQSRecordEvent"
                                                },
                                                "InvalidSQSRecordEvent": {
                                                    "Type": "Pass",
                                                    "End": true
                                                },
                                                "ParallelS3GetObjectAndPass": {
                                                    "Type": "Parallel",
                                                    "Branches": [
                                                        {
                                                            "StartAt": "PassThroughInput",
                                                            "States": {
                                                                "PassThroughInput": {
                                                                    "Type": "Pass",
                                                                    "End": true
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "StartAt": "S3GetObject",
                                                            "States": {
                                                                "S3GetObject": {
                                                                    "Type": "Task",
                                                                    "End": true,
                                                                    "Parameters": {
                                                                        "Bucket.$": "$.s3.bucket.name",
                                                                        "Key.$": "$.s3.object.key"
                                                                    },
                                                                    "Resource": "arn:aws:states:::aws-sdk:s3:getObject"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "ResultSelector": {
                                                        "awsRegion.$": "$[0].awsRegion",
                                                        "eventName.$": "$[0].eventName",
                                                        "eventSource.$": "$[0].eventSource",
                                                        "eventTime.$": "$[0].eventTime",
                                                        "eventVersion.$": "$[0].eventVersion",
                                                        "requestParameters.$": "$[0].requestParameters",
                                                        "s3": {
                                                            "bucket.$": "$[0].s3.bucket",
                                                            "configurationId.$": "$[0].s3.configurationId",
                                                            "object": {
                                                                "body.$": "States.StringToJson($[1].Body)",
                                                                "acceptRanges.$": "$[1].AcceptRanges",
                                                                "contentLength.$": "$[1].ContentLength",
                                                                "contentType.$": "$[1].ContentType",
                                                                "eTag.$": "$[0].s3.object.eTag",
                                                                "key.$": "$[0].s3.object.key",
                                                                "lastModified.$": "$[1].LastModified",
                                                                "metadata.$": "$[1].Metadata",
                                                                "serverSideEncryption.$": "$[1].ServerSideEncryption"
                                                            },
                                                            "s3SchemaVersion.$": "$[0].s3.s3SchemaVersion"
                                                        },
                                                        "userIdentity.$": "$[0].userIdentity"
                                                    },
                                                    "Next": "ProcessComprehendRecords"
                                                },
                                                "ProcessComprehendRecords": {
                                                    "Type": "Map",
                                                    "ItemProcessor": {
                                                        "ProcessorConfig": {
                                                            "Mode": "INLINE"
                                                        },
                                                        "StartAt": "ParallelProcessComprehendRecord",
                                                        "States": {
                                                            "ParallelProcessComprehendRecord": {
                                                                "Type": "Parallel",
                                                                "End": true,
                                                                "Branches": [
                                                                    {
                                                                        "StartAt": "ProcessComprehendEntities",
                                                                        "States": {
                                                                            "ProcessComprehendEntities": {
                                                                                "Type": "Map",
                                                                                "ItemProcessor": {
                                                                                    "ProcessorConfig": {
                                                                                        "Mode": "INLINE"
                                                                                    },
                                                                                    "StartAt": "PutObjectComprehendEntity",
                                                                                    "States": {
                                                                                        "PutObjectComprehendEntity": {
                                                                                            "Type": "Task",
                                                                                            "Parameters": {
                                                                                                "Body.$": "$.entity",
                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                "Key.$": "States.Format('${aws_s3_object_key}model=entity/language_code={}/type={}/comprehend_id={}/{}.json', $.entity.languageCode, $.entity.type, $.entity.comprehendId, $.entity.id)"
                                                                                            },
                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject",
                                                                                            "End": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "End": true,
                                                                                "ItemSelector": {
                                                                                    "entity": {
                                                                                        "beginOffset.$": "$$.Map.Item.Value.beginOffset",
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "createdAt.$": "$.createdAt",
                                                                                        "endOffset.$": "$$.Map.Item.Value.endOffset",
                                                                                        "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                        "index.$": "$$.Map.Item.Value.index",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "score.$": "$$.Map.Item.Value.score",
                                                                                        "text.$": "$$.Map.Item.Value.text",
                                                                                        "type.$": "$$.Map.Item.Value.type"
                                                                                    },
                                                                                    "s3.$": "$.s3"
                                                                                },
                                                                                "ItemsPath": "$.comprehend.entities"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "StartAt": "ProcessComprehendKeyPhrases",
                                                                        "States": {
                                                                            "ProcessComprehendKeyPhrases": {
                                                                                "Type": "Map",
                                                                                "ItemProcessor": {
                                                                                    "ProcessorConfig": {
                                                                                        "Mode": "INLINE"
                                                                                    },
                                                                                    "StartAt": "PutObjectComprehendKeyPhrase",
                                                                                    "States": {
                                                                                        "PutObjectComprehendKeyPhrase": {
                                                                                            "Type": "Task",
                                                                                            "End": true,
                                                                                            "Parameters": {
                                                                                                "Body.$": "$.keyPhrase",
                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                "Key.$": "States.Format('${aws_s3_object_key}model=key_phrase/language_code={}/comprehend_id={}/{}.json', $.keyPhrase.languageCode, $.keyPhrase.comprehendId, $.keyPhrase.id)"
                                                                                            },
                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "End": true,
                                                                                "ItemsPath": "$.comprehend.keyPhrases",
                                                                                "ItemSelector": {
                                                                                    "keyPhrase": {
                                                                                        "beginOffset.$": "$$.Map.Item.Value.beginOffset",
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "createdAt.$": "$.createdAt",
                                                                                        "endOffset.$": "$$.Map.Item.Value.endOffset",
                                                                                        "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                        "index.$": "$$.Map.Item.Value.index",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "score.$": "$$.Map.Item.Value.score",
                                                                                        "text.$": "$$.Map.Item.Value.text"
                                                                                    },
                                                                                    "s3.$": "$.s3"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "StartAt": "ProcessComprehendPiiEntities",
                                                                        "States": {
                                                                            "ProcessComprehendPiiEntities": {
                                                                                "Type": "Map",
                                                                                "ItemProcessor": {
                                                                                    "ProcessorConfig": {
                                                                                        "Mode": "INLINE"
                                                                                    },
                                                                                    "StartAt": "PutObjectComprehendPiiEntity",
                                                                                    "States": {
                                                                                        "PutObjectComprehendPiiEntity": {
                                                                                            "Type": "Task",
                                                                                            "Parameters": {
                                                                                                "Body.$": "$.piiEntity",
                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                "Key.$": "States.Format('${aws_s3_object_key}model=pii_entity/language_code={}/type={}/comprehend_id={}/{}.json', $.piiEntity.languageCode, $.piiEntity.type, $.piiEntity.comprehendId, $.piiEntity.id)"
                                                                                            },
                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject",
                                                                                            "End": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "End": true,
                                                                                "ItemSelector": {
                                                                                    "piiEntity": {
                                                                                        "beginOffset.$": "$$.Map.Item.Value.beginOffset",
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "createdAt.$": "$.createdAt",
                                                                                        "endOffset.$": "$$.Map.Item.Value.endOffset",
                                                                                        "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                        "index.$": "$$.Map.Item.Value.index",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "score.$": "$$.Map.Item.Value.score",
                                                                                        "type.$": "$$.Map.Item.Value.type"
                                                                                    },
                                                                                    "s3.$": "$.s3"
                                                                                },
                                                                                "ItemsPath": "$.comprehend.piiEntities"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "StartAt": "ParallelProcessComprehendSentiment",
                                                                        "States": {
                                                                            "ParallelProcessComprehendSentiment": {
                                                                                "Type": "Parallel",
                                                                                "End": true,
                                                                                "Branches": [
                                                                                    {
                                                                                        "StartAt": "PutObjectComprehendSentiment",
                                                                                        "States": {
                                                                                            "PutObjectComprehendSentiment": {
                                                                                                "Type": "Task",
                                                                                                "End": true,
                                                                                                "Parameters": {
                                                                                                    "Body": {
                                                                                                        "comprehendId.$": "$.sentiment.comprehendId",
                                                                                                        "id.$": "$.sentiment.id",
                                                                                                        "languageCode.$": "$.sentiment.languageCode",
                                                                                                        "languageCodeScore.$": "$.sentiment.languageCodeScore",
                                                                                                        "sentiment.$": "$.sentiment.sentiment"
                                                                                                    },
                                                                                                    "Bucket.$": "$.s3.bucket.name",
                                                                                                    "Key.$": "States.Format('${aws_s3_object_key}model=sentiment/language_code={}/sentiment={}/comprehend_id={}/{}.json', $.sentiment.languageCode, $.sentiment.sentiment, $.sentiment.comprehendId, $.sentiment.id)"
                                                                                                },
                                                                                                "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "StartAt": "PutObjectComprehendSentimentScore",
                                                                                        "States": {
                                                                                            "PutObjectComprehendSentimentScore": {
                                                                                                "Type": "Task",
                                                                                                "End": true,
                                                                                                "Parameters": {
                                                                                                    "Body": {
                                                                                                        "comprehendId.$": "$.sentiment.comprehendId",
                                                                                                        "id.$": "$.sentiment.sentimentScore.id",
                                                                                                        "languageCode.$": "$.sentiment.languageCode",
                                                                                                        "languageCodeScore.$": "$.sentiment.languageCodeScore",
                                                                                                        "mixed.$": "$.sentiment.sentimentScore.mixed",
                                                                                                        "negative.$": "$.sentiment.sentimentScore.negative",
                                                                                                        "neutral.$": "$.sentiment.sentimentScore.neutral",
                                                                                                        "positive.$": "$.sentiment.sentimentScore.positive",
                                                                                                        "sentimentId.$": "$.sentiment.id"
                                                                                                    },
                                                                                                    "Bucket.$": "$.s3.bucket.name",
                                                                                                    "Key.$": "States.Format('${aws_s3_object_key}model=sentiment_score/language_code={}/sentiment={}/sentiment_id={}/comprehend_id={}/{}.json', $.sentiment.languageCode, $.sentiment.sentiment, $.sentiment.id, $.sentiment.comprehendId, $.sentiment.sentimentScore.id)"
                                                                                                },
                                                                                                "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "Parameters": {
                                                                                    "s3.$": "$.s3",
                                                                                    "sentiment": {
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "id.$": "States.Hash($.comprehend.sentiment, 'MD5')",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "sentiment.$": "$.comprehend.sentiment.sentiment",
                                                                                        "sentimentScore": {
                                                                                            "id.$": "States.Hash($.comprehend.sentiment.sentimentScore, 'MD5')",
                                                                                            "mixed.$": "$.comprehend.sentiment.sentimentScore.mixed",
                                                                                            "negative.$": "$.comprehend.sentiment.sentimentScore.negative",
                                                                                            "neutral.$": "$.comprehend.sentiment.sentimentScore.neutral",
                                                                                            "positive.$": "$.comprehend.sentiment.sentimentScore.positive"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "StartAt": "ProcessComprehendSyntaxTokens",
                                                                        "States": {
                                                                            "ProcessComprehendSyntaxTokens": {
                                                                                "Type": "Map",
                                                                                "ItemProcessor": {
                                                                                    "ProcessorConfig": {
                                                                                        "Mode": "INLINE"
                                                                                    },
                                                                                    "StartAt": "ParallelProcessComprehendSyntaxToken",
                                                                                    "States": {
                                                                                        "ParallelProcessComprehendSyntaxToken": {
                                                                                            "Type": "Parallel",
                                                                                            "End": true,
                                                                                            "Branches": [
                                                                                                {
                                                                                                    "StartAt": "PutObjectComprehendSyntaxToken",
                                                                                                    "States": {
                                                                                                        "PutObjectComprehendSyntaxToken": {
                                                                                                            "Type": "Task",
                                                                                                            "End": true,
                                                                                                            "Parameters": {
                                                                                                                "Body": {
                                                                                                                    "beginOffset.$": "$.syntaxToken.beginOffset",
                                                                                                                    "comprehendId.$": "$.syntaxToken.comprehendId",
                                                                                                                    "endOffset.$": "$.syntaxToken.endOffset",
                                                                                                                    "index.$": "$.syntaxToken.index",
                                                                                                                    "id.$": "$.syntaxToken.id",
                                                                                                                    "languageCode.$": "$.syntaxToken.languageCode",
                                                                                                                    "languageCodeScore.$": "$.syntaxToken.languageCodeScore",
                                                                                                                    "text.$": "$.syntaxToken.text",
                                                                                                                    "tokenId.$": "$.syntaxToken.tokenId"
                                                                                                                },
                                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                                "Key.$": "States.Format('${aws_s3_object_key}model=syntax_token/language_code={}/token_id={}/comprehend_id={}/{}.json', $.syntaxToken.languageCode, $.syntaxToken.tokenId, $.syntaxToken.comprehendId, $.syntaxToken.id)"
                                                                                                            },
                                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "StartAt": "PutObjectComprehendSyntaxTokenPartOfSpeech",
                                                                                                    "States": {
                                                                                                        "PutObjectComprehendSyntaxTokenPartOfSpeech": {
                                                                                                            "Type": "Task",
                                                                                                            "End": true,
                                                                                                            "Parameters": {
                                                                                                                "Body": {
                                                                                                                    "comprehendId.$": "$.syntaxToken.comprehendId",
                                                                                                                    "id.$": "$.syntaxToken.partOfSpeech.id",
                                                                                                                    "languageCode.$": "$.syntaxToken.languageCode",
                                                                                                                    "languageCodeScore.$": "$.syntaxToken.languageCodeScore",
                                                                                                                    "score.$": "$.syntaxToken.partOfSpeech.score",
                                                                                                                    "syntaxTokenId.$": "$.syntaxToken.id",
                                                                                                                    "tag.$": "$.syntaxToken.partOfSpeech.tag"
                                                                                                                },
                                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                                "Key.$": "States.Format('${aws_s3_object_key}model=syntax_token_part_of_speech/language_code={}/tag={}/syntax_token_id={}/comprehend_id={}/{}.json', $.syntaxToken.languageCode, $.syntaxToken.partOfSpeech.tag, $.syntaxToken.id, $.syntaxToken.comprehendId, $.syntaxToken.partOfSpeech.id)"
                                                                                                            },
                                                                                                            "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "End": true,
                                                                                "ItemsPath": "$.comprehend.syntaxTokens",
                                                                                "ItemSelector": {
                                                                                    "syntaxToken": {
                                                                                        "beginOffset.$": "$$.Map.Item.Value.beginOffset",
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "endOffset.$": "$$.Map.Item.Value.endOffset",
                                                                                        "index.$": "$$.Map.Item.Value.index",
                                                                                        "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "partOfSpeech": {
                                                                                            "id.$": "States.Hash($$.Map.Item.Value.partOfSpeech, 'MD5')",
                                                                                            "score.$": "$$.Map.Item.Value.partOfSpeech.score",
                                                                                            "tag.$": "$$.Map.Item.Value.partOfSpeech.tag"
                                                                                        },
                                                                                        "text.$": "$$.Map.Item.Value.text",
                                                                                        "tokenId.$": "$$.Map.Item.Value.tokenId"
                                                                                    },
                                                                                    "s3.$": "$.s3"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "StartAt": "ProcessComprehendTargetedSentiment",
                                                                        "States": {
                                                                            "ProcessComprehendTargetedSentiment": {
                                                                                "Type": "Map",
                                                                                "ItemProcessor": {
                                                                                    "ProcessorConfig": {
                                                                                        "Mode": "INLINE"
                                                                                    },
                                                                                    "StartAt": "ParallelProcessComprehendTargetedSentiment",
                                                                                    "States": {
                                                                                        "ParallelProcessComprehendTargetedSentiment": {
                                                                                            "Type": "Parallel",
                                                                                            "End": true,
                                                                                            "Branches": [
                                                                                                {
                                                                                                    "StartAt": "ProcessComprehendTargetedSentimentDescriptiveIndex",
                                                                                                    "States": {
                                                                                                        "ProcessComprehendTargetedSentimentDescriptiveIndex": {
                                                                                                            "Type": "Map",
                                                                                                            "ItemProcessor": {
                                                                                                                "ProcessorConfig": {
                                                                                                                    "Mode": "INLINE"
                                                                                                                },
                                                                                                                "StartAt": "PutObjectComprehendTargetedSentimentDescriptiveIndex",
                                                                                                                "States": {
                                                                                                                    "PutObjectComprehendTargetedSentimentDescriptiveIndex": {
                                                                                                                        "Type": "Task",
                                                                                                                        "End": true,
                                                                                                                        "Parameters": {
                                                                                                                            "Body.$": "$.descriptiveMentionIndex",
                                                                                                                            "Bucket.$": "$.s3.bucket.name",
                                                                                                                            "Key.$": "States.Format('${aws_s3_object_key}model=targeted_sentiment_descriptive_mention/language_code={}/targeted_sentiment_id={}/comprehend_id={}/{}.json', $.descriptiveMentionIndex.languageCode, $.descriptiveMentionIndex.targetedSentimentId, $.descriptiveMentionIndex.comprehendId, $.descriptiveMentionIndex.id)"
                                                                                                                        },
                                                                                                                        "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "End": true,
                                                                                                            "ItemsPath": "$.targetedSentiment.descriptiveMentionIndex",
                                                                                                            "ItemSelector": {
                                                                                                                "descriptiveMentionIndex": {
                                                                                                                    "comprehendId.$": "$.targetedSentiment.id",
                                                                                                                    "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                                                    "index.$": "$$.Map.Item.Value.index",
                                                                                                                    "languageCode.$": "$.targetedSentiment.languageCode",
                                                                                                                    "languageCodeScore.$": "$.targetedSentiment.languageCodeScore",
                                                                                                                    "targetedSentimentId.$": "$.targetedSentiment.id",
                                                                                                                    "value.$": "$$.Map.Item.Value.value"
                                                                                                                },
                                                                                                                "s3.$": "$.s3"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "StartAt": "ProcessComprehendTargetedSentimentMention",
                                                                                                    "States": {
                                                                                                        "ProcessComprehendTargetedSentimentMention": {
                                                                                                            "Type": "Map",
                                                                                                            "ItemProcessor": {
                                                                                                                "ProcessorConfig": {
                                                                                                                    "Mode": "INLINE"
                                                                                                                },
                                                                                                                "StartAt": "ParallelProcessComprehendTargetedSentimentMention",
                                                                                                                "States": {
                                                                                                                    "ParallelProcessComprehendTargetedSentimentMention": {
                                                                                                                        "Type": "Parallel",
                                                                                                                        "End": true,
                                                                                                                        "Branches": [
                                                                                                                            {
                                                                                                                                "StartAt": "PutObjectComprehendTargetedSentimentMention",
                                                                                                                                "States": {
                                                                                                                                    "PutObjectComprehendTargetedSentimentMention": {
                                                                                                                                        "Type": "Task",
                                                                                                                                        "End": true,
                                                                                                                                        "Parameters": {
                                                                                                                                            "Body": {
                                                                                                                                                "beginOffset.$": "$.mention.beginOffset",
                                                                                                                                                "comprehendId.$": "$.mention.comprehendId",
                                                                                                                                                "endOffset.$": "$.mention.endOffset",
                                                                                                                                                "groupScore.$": "$.mention.groupScore",
                                                                                                                                                "id.$": "$.mention.id",
                                                                                                                                                "index.$": "$.mention.index",
                                                                                                                                                "languageCode.$": "$.mention.languageCode",
                                                                                                                                                "languageCodeScore.$": "$.mention.languageCodeScore",
                                                                                                                                                "score.$": "$.mention.score",
                                                                                                                                                "targetedSentimentId.$": "$.mention.targetedSentimentId",
                                                                                                                                                "text.$": "$.mention.text",
                                                                                                                                                "type.$": "$.mention.type"
                                                                                                                                            },
                                                                                                                                            "Bucket.$": "$.s3.bucket.name",
                                                                                                                                            "Key.$": "States.Format('${aws_s3_object_key}model=targeted_sentiment_mention/language_code={}/type={}/targeted_sentiment_id={}/comprehend_id={}/{}.json', $.mention.languageCode, $.mention.type, $.mention.targetedSentimentId, $.mention.comprehendId, $.mention.id)"
                                                                                                                                        },
                                                                                                                                        "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "StartAt": "PutObjectComprehendTargetedSentimentMentionSentiment",
                                                                                                                                "States": {
                                                                                                                                    "PutObjectComprehendTargetedSentimentMentionSentiment": {
                                                                                                                                        "Type": "Task",
                                                                                                                                        "End": true,
                                                                                                                                        "Parameters": {
                                                                                                                                            "Body": {
                                                                                                                                                "comprehendId.$": "$.mention.comprehendId",
                                                                                                                                                "id.$": "$.mention.mentionSentiment.id",
                                                                                                                                                "languageCode.$": "$.mention.languageCode",
                                                                                                                                                "languageCodeScore.$": "$.mention.languageCodeScore",
                                                                                                                                                "mentionSentimentId.$": "$.mention.id",
                                                                                                                                                "sentiment.$": "$.mention.mentionSentiment.sentiment"
                                                                                                                                            },
                                                                                                                                            "Bucket.$": "$.s3.bucket.name",
                                                                                                                                            "Key.$": "States.Format('${aws_s3_object_key}model=targeted_sentiment_mention_sentiment/language_code={}/sentiment={}/targeted_sentiment_mention_id={}/targeted_sentiment_id={}/comprehend_id={}/{}.json', $.mention.languageCode, $.mention.mentionSentiment.sentiment, $.mention.id, $.mention.targetedSentimentId, $.mention.comprehendId, $.mention.mentionSentiment.id)"
                                                                                                                                        },
                                                                                                                                        "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "End": true,
                                                                                                            "ItemsPath": "$.targetedSentiment.mentions",
                                                                                                            "ItemSelector": {
                                                                                                                "mention": {
                                                                                                                    "beginOffset.$": "$$.Map.Item.Value.beginOffset",
                                                                                                                    "comprehendId.$": "$.targetedSentiment.id",
                                                                                                                    "endOffset.$": "$$.Map.Item.Value.endOffset",
                                                                                                                    "groupScore.$": "$$.Map.Item.Value.groupScore",
                                                                                                                    "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                                                    "index.$": "$$.Map.Item.Value.index",
                                                                                                                    "languageCode.$": "$.targetedSentiment.languageCode",
                                                                                                                    "languageCodeScore.$": "$.targetedSentiment.languageCodeScore",
                                                                                                                    "mentionSentiment": {
                                                                                                                        "id.$": "States.Hash($$.Map.Item.Value.mentionSentiment, 'MD5')",
                                                                                                                        "sentimentScore": {
                                                                                                                            "id.$": "States.Hash($$.Map.Item.Value.mentionSentiment.sentimentScore, 'MD5')",
                                                                                                                            "negative.$": "$$.Map.Item.Value.mentionSentiment.sentimentScore.negative",
                                                                                                                            "neutral.$": "$$.Map.Item.Value.mentionSentiment.sentimentScore.neutral",
                                                                                                                            "mixed.$": "$$.Map.Item.Value.mentionSentiment.sentimentScore.mixed",
                                                                                                                            "positive.$": "$$.Map.Item.Value.mentionSentiment.sentimentScore.positive"
                                                                                                                        },
                                                                                                                        "sentiment.$": "$$.Map.Item.Value.mentionSentiment.sentiment"
                                                                                                                    },
                                                                                                                    "score.$": "$$.Map.Item.Value.score",
                                                                                                                    "targetedSentimentId.$": "$.targetedSentiment.id",
                                                                                                                    "text.$": "$$.Map.Item.Value.text",
                                                                                                                    "type.$": "$$.Map.Item.Value.type"
                                                                                                                },
                                                                                                                "s3.$": "$.s3"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "End": true,
                                                                                "ItemsPath": "$.comprehend.targetedSentiment",
                                                                                "ItemSelector": {
                                                                                    "s3.$": "$.s3",
                                                                                    "targetedSentiment": {
                                                                                        "comprehendId.$": "$.comprehend.id",
                                                                                        "descriptiveMentionIndex.$": "$$.Map.Item.Value.descriptiveMentionIndex",
                                                                                        "index.$": "$$.Map.Item.Value.index",
                                                                                        "id.$": "States.Hash($$.Map.Item.Value, 'MD5')",
                                                                                        "languageCode.$": "$.comprehend.languageCode",
                                                                                        "languageCodeScore.$": "$.comprehend.languageCodeScore",
                                                                                        "mentions.$": "$$.Map.Item.Value.mentions"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "End": true,
                                                    "ItemsPath": "$.s3.object.body.comprehend",
                                                    "ItemSelector": {
                                                        "createdAt.$": "$.s3.object.body.createdAt",
                                                        "comprehend": {
                                                            "entities.$": "$$.Map.Item.Value.entities",
                                                            "id.$": "$.s3.object.body.s3.object.eTag",
                                                            "keyPhrases.$": "$$.Map.Item.Value.keyPhrases",
                                                            "languageCode.$": "$$.Map.Item.Value.languageCode",
                                                            "languageCodeScore.$": "$$.Map.Item.Value.languageCodeScore",
                                                            "piiEntities.$": "$$.Map.Item.Value.piiEntities",
                                                            "sentiment.$": "$$.Map.Item.Value.sentiment",
                                                            "syntaxTokens.$": "$$.Map.Item.Value.syntaxTokens",
                                                            "targetedSentiment.$": "$$.Map.Item.Value.targetedSentiment",
                                                            "toxicContent.$": "$$.Map.Item.Value.toxicContent"
                                                        },
                                                        "s3": {
                                                            "bucket.$": "$.s3.bucket"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "End": true,
                                        "ItemsPath": "$.body.Records"
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "End": true
        }
    }
}
